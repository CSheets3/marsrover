{"version":3,"sources":["components/face.js","App.js","reportWebVitals.js","index.js"],"names":["MyFace","rurl","useState","items","setItems","content","useEffect","fetch","then","response","json","result","console","log","className","src","photos","img_src","alt","id","rover","name","camera","full_name","earth_date","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb483e7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nfunction MyFace(){\n    const rurl = 'https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=Y7KiOgTiki3ySb2b8ZzlftZmSKXo4JJeQuZfWhVf';\n    const [items, setItems] = useState(null);\n     let content = null;\n\n     {/* Just fetching the url */}\n    useEffect(() => {\n        fetch(rurl)\n        .then(response => {\n            response.json()\n        .then(result => {\n            setItems(result);\n        })\n        })\n    }, [rurl])\n    console.log(items);\n\n        {/* If items returns true then this happens */}\n\n    if(items){                          \n        content = \n        <div className={'structure'}>\n            <div className={'frames'}>\n                <img className={'images'} src={items.photos[0].img_src} alt={items.photos[0].id} />\n                <h1 className={'testing'}>Rover: {items.photos[0].rover.name}</h1>\n                <p className={'testing'}>{items.photos[0].camera.full_name}</p>\n                <p className={'testing'}>Date: {items.photos[0].earth_date}</p>\n            </div >\n            <div className={'frames'}>\n                <img className={'images'} src={items.photos[1].img_src} alt={items.photos[1].id} />\n                <h1 className={'testing'}>Rover: {items.photos[1].rover.name}</h1>\n                <p className={'testing'}>{items.photos[1].camera.full_name}</p>\n                <p className={'testing'}>Date: {items.photos[1].earth_date}</p>\n            </div>\n            <div className={'frames'}>\n                <img className={'images'} src={items.photos[2].img_src} alt={items.photos[2].id} />\n                <h1 className={'testing'}>Rover: {items.photos[2].rover.name}</h1>\n                <p className={'testing'}>{items.photos[2].camera.full_name}</p>\n                <p className={'testing'}>Date: {items.photos[2].earth_date}</p>\n            </div>\n            <div className={'frames'}>\n                <img className={'images'} src={items.photos[3].img_src} alt={items.photos[3].id} />\n                <h1 className={'testing'}>Rover: {items.photos[3].rover.name}</h1>\n                <p className={'testing'}>{items.photos[3].camera.full_name}</p>\n                <p className={'testing'}>Date: {items.photos[3].earth_date}</p>\n            </div>\n            <div className={'frames'}>\n                <img className={'images'} src={items.photos[4].img_src} alt={items.photos[4].id} />\n                <h1 className={'testing'}>Rover: {items.photos[4].rover.name}</h1>\n                <p className={'testing'}>{items.photos[4].camera.full_name}</p>\n                <p className={'testing'}>Date: {items.photos[4].earth_date}</p>\n            </div>\n            <div className={'frames'}>\n                <img className={'images'} src={items.photos[5].img_src} alt={items.photos[5].id} />\n                <h1 className={'testing'}>Rover: {items.photos[5].rover.name}</h1>\n                <p className={'testing'}>{items.photos[5].camera.full_name}</p>\n                <p className={'testing'}>Date: {items.photos[5].earth_date}</p>\n            </div>\n        </div>\n    }\n\n    return (\n        <div>\n            {content}\n        </div>\n    )\n\n}\n\nexport default MyFace;","import './App.css';\nimport MyFace from './components/face';\nfunction App() {\n  return (\n    <div className=\"colors\">\n      <MyFace />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}